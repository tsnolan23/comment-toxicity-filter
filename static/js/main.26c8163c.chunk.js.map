{"version":3,"sources":["components/constants.js","components/CommentForm/CommentForm.js","components/Intro/Intro.js","components/GitHubLink/GitHubLink.js","components/App/App.js","index.js"],"names":["PERSPECTIVE_API_URL","concat","process","TOXICITY_THRESHOLD","CommentForm","checkForToxicity","values","_ref","setErrors","resetForm","axios","post","comment","text","languages","requestedAttributes","TOXICITY","then","res","data","attributeScores","summaryScore","value","_this","props","onSubmit","catch","react_default","a","createElement","className","formik_esm","initialValues","this","validationSchema","Yup","shape","required","errors","touched","handleChange","isSubmitting","handleSubmit","placeholder","onChange","name","type","React","Component","Intro","href","target","rel","octocatWave","keyframes","_templateObject","Link","styled","_templateObject2","Svg","_templateObject3","GithubLink","aria-label","width","height","viewBox","aria-hidden","d","fill","App","GitHubLink","components_Intro_Intro","components_CommentForm_CommentForm","alert","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"oWAAaA,UAAmB,wEAAAC,OAC9BC,4CAGWC,EAAqB,GC8EnBC,6MAzEbC,iBAAmB,SAACC,EAADC,GAAsC,IAA3BC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,UACvCC,IACGC,KAAKX,EAAqB,CACzBY,QAAS,CACPC,KAAMP,EAAOM,SAEfE,UAAW,CAAC,MACZC,oBAAqB,CACnBC,SAAU,MAGbC,KAAK,SAAAC,GAGJ,OADEA,EAAIC,KAAKC,gBAAgBJ,SAASK,aAAaC,OACxBnB,EAEhBK,EAAU,CACfI,QAAS,wDAGbH,IACOc,EAAKC,MAAMC,SAASnB,MAE5BoB,MAAM,uFAMT,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,cAAe,CAAEpB,QAAS,IAC1Ba,SAAUQ,KAAK5B,iBACf6B,iBAAkBC,WAAaC,MAAM,CACnCxB,QAASuB,WAAaE,SAAS,6BAGhC,SAAAb,GAAS,IAENlB,EAMEkB,EANFlB,OACAgC,EAKEd,EALFc,OACAC,EAIEf,EAJFe,QAEAC,GAEEhB,EAHFiB,aAGEjB,EAFFgB,cACAE,EACElB,EADFkB,aAEF,OACEf,EAAAC,EAAAC,cAAA,QAAMJ,SAAUiB,GACdf,EAAAC,EAAAC,cAAA,YACEC,UAAS,yBAAA7B,OAA2BqC,EAAO1B,SACzC2B,EAAQ3B,SACR,gCACF+B,YAAY,wBACZrB,MAAOhB,EAAOM,QACdgC,SAAUJ,EACVK,KAAK,YAEPlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBQ,EAAO1B,SAC5Ce,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBgB,KAAK,UAA7C,sBA7DQC,IAAMC,WCiBjBC,UArBD,kBACZtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,0CACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,6DAC6D,IAC3DH,EAAAC,EAAAC,cAAA,KACEqB,KAAK,iCACLC,OAAO,SACPC,IAAI,sBACJtB,UAAU,eAJZ,mBAOK,IATP,yjCCJJ,IAAMuB,EAAcC,YAAHC,KAeXC,EAAOC,IAAO7B,EAAV8B,IAGOL,EAUEA,GAKbM,EAAMF,YAAO,MAAPA,CAAHG,KA+BMC,EArBI,kBACjBlC,EAAAC,EAAAC,cAAC2B,EAAD,CACEN,KAAK,uDACLY,aAAW,yBAEXnC,EAAAC,EAAAC,cAAC8B,EAAD,CAAKI,MAAM,KAAKC,OAAO,KAAKC,QAAQ,cAAcC,cAAY,QAC5DvC,EAAAC,EAAAC,cAAA,QAAMsC,EAAE,sDACRxC,EAAAC,EAAAC,cAAA,QACEC,UAAU,WACVsC,KAAK,eACLD,EAAE,6LAEJxC,EAAAC,EAAAC,cAAA,QACEC,UAAU,YACVsC,KAAK,eACLD,EAAE,2hBC9CKE,EARH,kBACV1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAa/C,SAAU,kBAAMgD,MAAM,oCCLvCC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.26c8163c.chunk.js","sourcesContent":["export const PERSPECTIVE_API_URL = `https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=${\n  process.env.REACT_APP_API_KEY\n}`;\n\nexport const TOXICITY_THRESHOLD = 0.6;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nimport \"./style.css\";\nimport { PERSPECTIVE_API_URL, TOXICITY_THRESHOLD } from \"../constants\";\n\nclass CommentForm extends React.Component {\n  checkForToxicity = (values, { setErrors, resetForm }) => {\n    axios\n      .post(PERSPECTIVE_API_URL, {\n        comment: {\n          text: values.comment\n        },\n        languages: [\"en\"],\n        requestedAttributes: {\n          TOXICITY: {}\n        }\n      })\n      .then(res => {\n        const estimatedToxicity =\n          res.data.attributeScores.TOXICITY.summaryScore.value;\n        if (estimatedToxicity >= TOXICITY_THRESHOLD) {\n          // Toxic comment found reject\n          return setErrors({\n            comment: \"Please dial it back, your comment was deemed toxic\"\n          });\n        }\n        resetForm();\n        return this.props.onSubmit(values);\n      })\n      .catch(() => {\n        // Handlesubmit even if this fails???\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"CommentForm\">\n        <Formik\n          initialValues={{ comment: \"\" }}\n          onSubmit={this.checkForToxicity}\n          validationSchema={Yup.object().shape({\n            comment: Yup.string().required(\"Please enter a comment\")\n          })}\n        >\n          {props => {\n            const {\n              values,\n              errors,\n              touched,\n              isSubmitting,\n              handleChange,\n              handleSubmit\n            } = props;\n            return (\n              <form onSubmit={handleSubmit}>\n                <textarea\n                  className={`CommentForm__Textarea ${errors.comment &&\n                    touched.comment &&\n                    \"CommentForm__Textarea--error\"}`}\n                  placeholder=\"Enter your comment...\"\n                  value={values.comment}\n                  onChange={handleChange}\n                  name=\"comment\"\n                />\n                <div className=\"CommentForm__Actions\">\n                  <div className=\"CommentForm__Error\">{errors.comment}</div>\n                  <button className=\"CommentForm__Submit\" type=\"submit\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default CommentForm;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Intro = () => (\n  <div className=\"Intro\">\n    <h1 className=\"Intro__Title\">Fighting Toxicity with Perspective API</h1>\n    <p className=\"Intro__Desc\">\n      When the form is submitted, we send the comment off to the{\" \"}\n      <a\n        href=\"https://www.perspectiveapi.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"Intro__Link\"\n      >\n        Perspective API\n      </a>{\" \"}\n      to determine the probability that it was intended to be toxic. We compare\n      that probability to a threshold we deem \"okay\", and if it exceeds that, we\n      reject the comment as toxic. Try it below by entering a variety of\n      comments and see which ones are rejected!\n    </p>\n  </div>\n);\n\nexport default Intro;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst octocatWave = keyframes`\n  0%,\n  100% {\n    transform: rotate(0);\n  }\n  20%,\n  60% {\n    transform: rotate(-25deg);\n  }\n  40%,\n  80% {\n    transform: rotate(10deg);\n  }\n`;\n\nconst Link = styled.a`\n  outline: none !important;\n  &:hover .octo-arm {\n    animation: ${octocatWave} 560ms ease-in-out;\n  }\n  & .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  @media screen and (max-width: 500px) {\n    &:hover .octo-arm {\n      animation: none;\n    }\n    & .octo-arm {\n      animation: ${octocatWave} 560ms ease-in-out;\n    }\n  }\n`;\n\nconst Svg = styled(\"svg\")`\n  z-index: 99;\n  fill: #4886fe;\n  color: #fff;\n  position: fixed;\n  top: 0;\n  border: 0;\n  right: 0;\n`;\n\nconst GithubLink = () => (\n  <Link\n    href=\"https://github.com/tsnolan23/comment-toxicity-filter\"\n    aria-label=\"View source on Github\"\n  >\n    <Svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        className=\"octo-arm\"\n        fill=\"currentColor\"\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      />\n      <path\n        className=\"octo-body\"\n        fill=\"currentColor\"\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      />\n    </Svg>\n  </Link>\n);\n\nexport default GithubLink;\n","import React from \"react\";\n\nimport \"./style.css\";\nimport CommentForm from \"../CommentForm\";\nimport Intro from \"../Intro\";\nimport GitHubLink from \"../GitHubLink\";\n\nconst App = () => (\n  <div className=\"App\">\n    <GitHubLink />\n    <Intro />\n    <CommentForm onSubmit={() => alert(\"Your comment was not toxic!\")} />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}