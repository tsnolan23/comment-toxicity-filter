{"version":3,"sources":["components/Card/Card.js","components/constants.js","components/CommentForm/CommentForm.js","components/Intro/Intro.js","components/GitHubLink/GitHubLink.js","components/Results/Results.js","components/App/App.js","index.js"],"names":["Card","_ref","props","Object","esm_extends","react_default","a","createElement","assign","className","PERSPECTIVE_API_URL","concat","process","CommentForm","checkForToxicity","values","setSubmitting","axios","post","comment","text","languages","requestedAttributes","TOXICITY","INSULT","FLIRTATION","THREAT","then","res","_this","onSubmit","data","attributeScores","catch","components_Card_Card","formik_esm","initialValues","this","validationSchema","Yup","shape","required","errors","touched","isSubmitting","handleChange","handleSubmit","placeholder","value","onChange","name","type","React","Component","Intro","href","target","rel","octocatWave","keyframes","_templateObject","Link","styled","_templateObject2","Svg","_templateObject3","GithubLink","aria-label","width","height","viewBox","aria-hidden","d","fill","INTENTS","id","label","Results","results","map","intent","key","get","toFixed","getProbability","defaultProps","App","_useState","useState","_useState2","slicedToArray","setResults","GitHubLink","components_Intro_Intro","components_CommentForm_CommentForm","components_Results_Results","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.fa72b20c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./style.css\";\n\nconst Card = ({ ...props }) => <div className=\"Card\" {...props} />;\n\nexport default Card;\n","export const PERSPECTIVE_API_URL = `https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=${\n  process.env.REACT_APP_API_KEY\n}`;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nimport \"./style.css\";\nimport Card from \"../Card\";\nimport { PERSPECTIVE_API_URL } from \"../constants\";\n\nclass CommentForm extends React.Component {\n  checkForToxicity = (values, { setSubmitting }) => {\n    axios\n      .post(PERSPECTIVE_API_URL, {\n        comment: {\n          text: values.comment\n        },\n        languages: [\"en\"],\n        requestedAttributes: {\n          TOXICITY: {},\n          INSULT: {},\n          FLIRTATION: {},\n          THREAT: {}\n        }\n      })\n      .then(res => {\n        setSubmitting(false);\n        return this.props.onSubmit(values, res.data.attributeScores);\n      })\n      .catch(() => {\n        // Handle submit even if this fails???\n      });\n  };\n\n  render() {\n    return (\n      <Card>\n        <Formik\n          initialValues={{ comment: \"\" }}\n          onSubmit={this.checkForToxicity}\n          validationSchema={Yup.object().shape({\n            comment: Yup.string().required(\"Please enter a comment\")\n          })}\n        >\n          {props => {\n            const {\n              values,\n              errors,\n              touched,\n              isSubmitting,\n              handleChange,\n              handleSubmit\n            } = props;\n            return (\n              <form onSubmit={handleSubmit}>\n                <textarea\n                  className={`CommentForm__Textarea ${errors.comment &&\n                    touched.comment &&\n                    \"CommentForm__Textarea--error\"}`}\n                  placeholder=\"Enter your comment...\"\n                  value={values.comment}\n                  onChange={handleChange}\n                  name=\"comment\"\n                />\n                <div className=\"CommentForm__Actions\">\n                  <div className=\"CommentForm__Error\">{errors.comment}</div>\n                  <button className=\"CommentForm__Submit\" type=\"submit\">\n                    {isSubmitting ? \"Sending...\" : \"Submit\"}\n                  </button>\n                </div>\n              </form>\n            );\n          }}\n        </Formik>\n      </Card>\n    );\n  }\n}\n\nexport default CommentForm;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Intro = () => (\n  <div className=\"Intro\">\n    <h1 className=\"Intro__Title\">Fighting Toxicity with Perspective API</h1>\n    <p className=\"Intro__Desc\">\n      When the form is submitted, we send the comment off to the{\" \"}\n      <a\n        href=\"https://www.perspectiveapi.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"Intro__Link\"\n      >\n        Perspective API\n      </a>{\" \"}\n      to determine the probability that it was intended to be toxic. We compare\n      that probability to a threshold we deem \"okay\", and if it exceeds that, we\n      reject the comment as toxic. Try it below by entering a variety of\n      comments and see which ones are rejected!\n    </p>\n  </div>\n);\n\nexport default Intro;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst octocatWave = keyframes`\n  0%,\n  100% {\n    transform: rotate(0);\n  }\n  20%,\n  60% {\n    transform: rotate(-25deg);\n  }\n  40%,\n  80% {\n    transform: rotate(10deg);\n  }\n`;\n\nconst Link = styled.a`\n  outline: none !important;\n  &:hover .octo-arm {\n    animation: ${octocatWave} 560ms ease-in-out;\n  }\n  & .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  @media screen and (max-width: 500px) {\n    &:hover .octo-arm {\n      animation: none;\n    }\n    & .octo-arm {\n      animation: ${octocatWave} 560ms ease-in-out;\n    }\n  }\n`;\n\nconst Svg = styled(\"svg\")`\n  z-index: 99;\n  fill: #4886fe;\n  color: #fff;\n  position: fixed;\n  top: 0;\n  border: 0;\n  right: 0;\n`;\n\nconst GithubLink = () => (\n  <Link\n    href=\"https://github.com/tsnolan23/comment-toxicity-filter\"\n    aria-label=\"View source on Github\"\n  >\n    <Svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        className=\"octo-arm\"\n        fill=\"currentColor\"\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      />\n      <path\n        className=\"octo-body\"\n        fill=\"currentColor\"\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      />\n    </Svg>\n  </Link>\n);\n\nexport default GithubLink;\n","import React from \"react\";\nimport { get } from \"lodash\";\n\nimport \"./style.css\";\nimport Card from \"../Card\";\n\nconst INTENTS = [\n  {\n    id: \"TOXICITY\",\n    label: \"Toxicity\"\n  },\n  {\n    id: \"INSULT\",\n    label: \"Insult\"\n  },\n  {\n    id: \"FLIRTATION\",\n    label: \"Flirtation\"\n  },\n  {\n    id: \"THREAT\",\n    label: \"Threat\"\n  }\n];\n\nconst Results = ({ results }) => {\n  const getProbability = intent => {\n    const value = get(results, [intent, \"summaryScore\", \"value\"]);\n    return value ? value.toFixed(2) : \"--\";\n  };\n  return (\n    <Card>\n      {INTENTS.map(intent => (\n        <div className=\"Results__Row\" key={intent.id}>\n          <h3 className=\"Results__Intent\">{intent.label}</h3>\n          <div>{getProbability(intent.id)}</div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nResults.defaultProps = {\n  results: {}\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\nimport CommentForm from \"../CommentForm\";\nimport Intro from \"../Intro\";\nimport GitHubLink from \"../GitHubLink\";\nimport Results from \"../Results\";\n\nconst App = () => {\n  const [results, setResults] = useState({});\n  return (\n    <div className=\"App\">\n      <GitHubLink />\n      <Intro />\n      <CommentForm onSubmit={(values, results) => setResults(results)} />\n      <br />\n      <Results results={results} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}